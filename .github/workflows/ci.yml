name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        cache-dependency-path: MesaChain-BE/pnpm-lock.yaml
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      working-directory: ./MesaChain-BE
      run: pnpm install --frozen-lockfile
    
    - name: Generate Prisma client
      working-directory: ./MesaChain-BE
      run: pnpm prisma generate
    
    - name: Run linting
      working-directory: ./MesaChain-BE
      run: pnpm run lint
    
    - name: Run tests
      working-directory: ./MesaChain-BE
      run: pnpm run test:cov
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./MesaChain-BE/coverage/lcov.info
        flags: backend
        name: backend-coverage

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        cache-dependency-path: MesaChain-FE/pnpm-lock.yaml
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      working-directory: ./MesaChain-FE
      run: pnpm install --frozen-lockfile
    
    - name: Run linting
      working-directory: ./MesaChain-FE
      run: pnpm run lint
    
    - name: Run tests
      working-directory: ./MesaChain-FE
      run: pnpm run test:cov
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./MesaChain-FE/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and test Docker images
      run: |
        docker-compose build
        docker-compose up -d postgres redis
        docker-compose run --rm backend pnpm run test
        docker-compose down 